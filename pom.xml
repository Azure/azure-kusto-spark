<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.microsoft.azure.kusto</groupId>
    <artifactId>azure-kusto-spark</artifactId>
    <packaging>pom</packaging>
    <version>${revision}</version>
    <properties>
        <revision>5.0.7</revision>
        <!-- Spark dependencies -->
        <scala.version.major>2.12</scala.version.major>
        <scalafmt.plugin.version>1.1.1640084764.9f463a9</scalafmt.plugin.version>
        <scala.version.minor>17</scala.version.minor>
        <spark.version.major>3.0</spark.version.major>
        <spark.version.minor>1</spark.version.minor>
        <!-- other dependencies -->
        <azure.bom.version>1.2.14</azure.bom.version>
        <!-- versions from https://learn.microsoft.com/en-us/azure/databricks/release-notes/runtime/13.2-->
        <fasterxml.jackson.jar.version>2.13.4</fasterxml.jackson.jar.version>
        <fasterxml.jackson.version>2.14.3</fasterxml.jackson.version>
        <!-- Deprecate only after full migration to azure storage 12-->
        <azure-storage.version>8.6.6</azure-storage.version>
        <jsonsmart.version>2.4.10</jsonsmart.version>
        <junit4.version>4.13.2</junit4.version>
        <commons.lang3.version>3.12.0</commons.lang3.version>
        <hadoop.version>3.3.6</hadoop.version>
        <kusto.sdk.version>5.0.4</kusto.sdk.version>
        <java.source.version>1.8</java.source.version>
        <java.target.version>1.8</java.target.version>
        <!-- test dependencies -->
        <maven.compile.plugin.version>3.10.1</maven.compile.plugin.version>
        <maven.flatten.version>1.4.1</maven.flatten.version>
        <maven.jar.plugin.version>3.3.0</maven.jar.plugin.version>
        <maven.shade.plugin.version>3.5.1</maven.shade.plugin.version>
        <maven.source.plugin.version>3.0.1</maven.source.plugin.version>
        <maven.surefire.plugin.version>3.0.0</maven.surefire.plugin.version>
        <mockito.version>4.11.0</mockito.version>
        <netty.version>4.1.94.Final</netty.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <reactor.netty.version>1.0.39</reactor.netty.version>
        <scala.maven.plugin.version>4.8.1</scala.maven.plugin.version>
        <scalamock.version>5.2.0</scalamock.version>
        <scalastyle.maven.plugin.version>1.0.0</scalastyle.maven.plugin.version>
        <scalatest.maven.version>2.2.0</scalatest.maven.version>
        <scalatest.version>3.2.17</scalatest.version>
        <shadingPrefix>azure_kusto_spark</shadingPrefix>
        <slf4j.version>1.8.0-beta4</slf4j.version>
        <specs2.version>3.6.5</specs2.version>
        <msal4j.version>1.13.9</msal4j.version>
    </properties>

    <inceptionYear>2018</inceptionYear>
    <scm>
        <url>scm:git:https://github.com/Azure/azure-kusto-spark</url>
        <connection>scm:git:https://github.com/Azure/azure-kusto-spark</connection>
    </scm>
    <url>https://github.com/Azure/azure-kusto-spark</url>
    <licenses>
        <license>
            <name>Apache 2.0 License</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.html</url>
            <distribution>repo</distribution>
        </license>
    </licenses>
    <developers>
        <developer>
            <id>microsoft</id>
            <name>Microsoft</name>
        </developer>
    </developers>

    <modules>
        <module>connector</module>
        <module>samples</module>
    </modules>

    <build>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>flatten-maven-plugin</artifactId>
                <version>${maven.flatten.version}</version>
                <configuration>
                    <flattenMode>oss</flattenMode>
                </configuration>
                <executions>
                    <!-- enable flattening -->
                    <execution>
                        <id>flatten</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>flatten</goal>
                        </goals>
                    </execution>
                    <!-- ensure proper cleanup -->
                    <execution>
                        <id>flatten.clean</id>
                        <phase>clean</phase>
                        <goals>
                            <goal>clean</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.antipathy</groupId>
                <artifactId>mvn-scalafmt_${scala.version.major}</artifactId>
                <version>${scalafmt.plugin.version}</version>
                <configuration>
                    <configLocation>./.scalafmt.conf</configLocation> <!-- path to config -->
                    <validateOnly>false</validateOnly> <!-- check formatting without changing files -->
                    <onlyChangedFiles>true</onlyChangedFiles> <!-- only format (staged) files that have been changed from the specified git branch -->
                    <showReformattedOnly>false</showReformattedOnly> <!-- log only modified files -->
                    <!-- The git branch to check against
                         If branch.startsWith(": ") the value in <branch> tag is used as a command to run
                         and the output will be used as the actual branch-->
                    <branch>: git rev-parse --abbrev-ref HEAD</branch> <!-- the current branch-->
                    <!-- <branch>master</branch>-->
                    <useSpecifiedRepositories>false</useSpecifiedRepositories> <!-- use project repositories configuration for scalafmt dynamic loading -->
                </configuration>
                <executions>
                    <execution>
                        <phase>validate</phase> <!-- default -->
                        <goals>
                            <goal>format</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>io.github.evis</groupId>
                <artifactId>scalafix-maven-plugin_${scala.version.major}</artifactId>
                <version>0.1.8_0.11.0</version>
                <dependencies>
                    <dependency>
                        <groupId>ch.epfl.scala</groupId>
                        <artifactId>scalafix-core_${scala.version.major}</artifactId>
                        <version>0.11.1</version>
                    </dependency>
                    <dependency>
                        <groupId>org.scala-lang</groupId>
                        <artifactId>scala-rewrites_${scala.version.major}</artifactId>
                        <version>0.1.3</version>
                    </dependency>
                    <dependency>
                        <groupId>org.typelevel</groupId>
                        <artifactId>typelevel-scalafix_${scala.version.major}</artifactId>
                        <version>0.1.4</version>
                    </dependency>
                </dependencies>
            </plugin>

        </plugins>
    </build>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.azure</groupId>
                <artifactId>azure-sdk-bom</artifactId>
                <version>${azure.bom.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>
</project>
