<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <artifactId>kusto-spark_${spark.version.major}_${scala.version.major}</artifactId>
    <name>Spark Kusto connector</name>
    <description>Kusto connector for Spark to query and ingest data</description>
    <parent>
        <artifactId>azure-kusto-spark</artifactId>
        <groupId>com.microsoft.azure.kusto</groupId>
        <version>${revision}</version>
    </parent>
    <dependencies>
        <!-- Compile Scope -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${fasterxml.jackson.version}</version>
            <exclusions>
                <exclusion>
                    <artifactId>scala-library</artifactId>
                    <groupId>org.scala-lang</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.module</groupId>
            <artifactId>jackson-module-scala_${scala.version.major}</artifactId>
            <version>${fasterxml.jackson.version}</version>
            <exclusions>
                <exclusion>
                    <artifactId>scala-library</artifactId>
                    <groupId>org.scala-lang</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jsr310</artifactId>
            <version>${fasterxml.jackson.jar.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>${commons.lang3.version}</version>
        </dependency>
        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-library</artifactId>
            <version>${scala.version.major}.${scala.version.minor}</version>
        </dependency>
        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-reflect</artifactId>
            <version>${scala.version.major}.${scala.version.minor}</version>
        </dependency>
        <dependency>
            <groupId>com.microsoft.azure.kusto</groupId>
            <artifactId>kusto-data</artifactId>
            <version>${kusto.sdk.version}</version>
            <exclusions>
                <exclusion>
                    <artifactId>jackson-databind</artifactId>
                    <groupId>com.fasterxml.jackson.core</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>commons-codec</artifactId>
                    <groupId>commons-codec</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>commons-lang3</artifactId>
                    <groupId>org.apache.commons</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>annotations</artifactId>
                    <groupId>org.jetbrains</groupId>
                </exclusion>
                <exclusion>
                    <groupId>net.minidev</groupId>
                    <artifactId>json-smart</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.microsoft.azure.kusto</groupId>
            <artifactId>kusto-ingest</artifactId>
            <version>${kusto.sdk.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>com.fasterxml.jackson.core</groupId>
                    <artifactId>jackson-databind</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.univocity</groupId>
                    <artifactId>univocity-parsers</artifactId>
                </exclusion>
                <exclusion>
                    <artifactId>jackson-annotations</artifactId>
                    <groupId>com.fasterxml.jackson.core</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>commons-lang3</artifactId>
                    <groupId>org.apache.commons</groupId>
                </exclusion>
                <exclusion>
                    <groupId>com.azure</groupId>
                    <artifactId>azure-storage-blob</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>io.netty</groupId>
                    <artifactId>netty-codec</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>io.projectreactor.netty</groupId>
                    <artifactId>reactor-netty-http</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>io.projectreactor.netty</groupId>
                    <artifactId>reactor-netty-core</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>io.netty</groupId>
            <artifactId>netty-codec</artifactId>
            <version>${netty.version}</version>
        </dependency>
        <dependency>
            <groupId>io.projectreactor.netty</groupId>
            <artifactId>reactor-netty-core</artifactId>
            <version>${reactor.netty.version}</version>
        </dependency>
        <dependency>
            <groupId>io.projectreactor.netty</groupId>
            <artifactId>reactor-netty-http</artifactId>
            <version>${reactor.netty.version}</version>
        </dependency>
        <dependency>
            <groupId>com.azure</groupId>
            <artifactId>azure-storage-blob</artifactId>
            <exclusions>
                <exclusion>
                    <artifactId>commons-lang3</artifactId>
                    <groupId>org.apache.commons</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>jackson-core</artifactId>
                    <groupId>com.fasterxml.jackson.core</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>guava</artifactId>
                    <groupId>com.google.guava</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.microsoft.azure</groupId>
            <artifactId>azure-storage</artifactId>
            <version>${azure-storage.version}</version>
        </dependency>
        <dependency>
            <groupId>com.azure</groupId>
            <artifactId>azure-security-keyvault-secrets</artifactId>
            <exclusions>
                <exclusion>
                    <artifactId>azure-core-http-netty</artifactId>
                    <groupId>com.azure</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>azure-core</artifactId>
                    <groupId>com.azure</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <!-- Added to avoid ADB issue, ClassNotFoundException: net.minidev.json.JSONAware -->
        <dependency>
            <groupId>net.minidev</groupId>
            <artifactId>json-smart</artifactId>
            <version>${jsonsmart.version}</version>
        </dependency>
        <!--might need 3.2.0 here for local run query-->
        <dependency>
            <groupId>org.apache.hadoop</groupId>
            <artifactId>hadoop-common</artifactId>
            <version>${hadoop.version}</version>
            <scope>provided</scope>
        </dependency>
        <!--might need 3.2.0 here for local run query-->
        <dependency>
            <groupId>org.apache.hadoop</groupId>
            <artifactId>hadoop-azure</artifactId>
            <version>${hadoop.version}</version>
            <scope>provided</scope>
            <exclusions>
                <exclusion>
                    <artifactId>commons-lang</artifactId>
                    <groupId>commons-lang</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>jsr305</artifactId>
                    <groupId>com.google.code.findbugs</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>guava</artifactId>
                    <groupId>com.google.guava</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <!-- Provided Scope -->
        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-sql_${scala.version.major}</artifactId>
            <version>${spark.version.major}.${spark.version.minor}</version>
            <scope>provided</scope>
            <exclusions>
                <exclusion>
                    <artifactId>jackson-annotations</artifactId>
                    <groupId>com.fasterxml.jackson.core</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>jackson-core</artifactId>
                    <groupId>com.fasterxml.jackson.core</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>jackson-databind</artifactId>
                    <groupId>com.fasterxml.jackson.core</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>jackson-module-scala_${scala.version.major}</artifactId>
                    <groupId>com.fasterxml.jackson.module</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>scala-library</artifactId>
                    <groupId>org.scala-lang</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-catalyst_${scala.version.major}</artifactId>
            <version>${spark.version.major}.${spark.version.minor}</version>
            <scope>provided</scope>
            <exclusions>
                <exclusion>
                    <artifactId>jackson-core</artifactId>
                    <groupId>com.fasterxml.jackson.core</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>jsr305</artifactId>
                    <groupId>com.google.code.findbugs</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>scala-library</artifactId>
                    <groupId>org.scala-lang</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <!-- Test Scope -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit4.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.scalatest</groupId>
            <artifactId>scalatest_${scala.version.major}</artifactId>
            <version>${scalatest.version}</version>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <artifactId>scala-library</artifactId>
                    <groupId>org.scala-lang</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.scalamock</groupId>
            <artifactId>scalamock_${scala.version.major}</artifactId>
            <version>${scalamock.version}</version>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <artifactId>scala-library</artifactId>
                    <groupId>org.scala-lang</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
            <version>${mockito.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
    <!-- Build properties -->
    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>*.properties</include>
                </includes>
            </resource>
        </resources>
        <testSourceDirectory>src/test/scala</testSourceDirectory>
        <plugins>
            <plugin>
                <!-- see http://davidb.github.com/scala-maven-plugin -->
                <groupId>net.alchim31.maven</groupId>
                <artifactId>scala-maven-plugin</artifactId>
                <version>${scala.maven.plugin.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>compile</goal>
                            <goal>testCompile</goal>
                        </goals>
                        <configuration>
                            <args>
                                <arg>-dependencyfile</arg>
                                <arg>${project.build.directory}/.scala_dependencies</arg>
                            </args>
                        </configuration>
                    </execution>
                </executions>
                <configuration>
                    <addScalacArgs>-target:jvm-1.8</addScalacArgs>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven.surefire.plugin.version}</version>
                <configuration>
                    <!-- When 'true': Tests will be run with scalatest-maven-plugin  -->
                    <skipTests>true</skipTests>
                    <excludes>
                        <exclude>**/*E2E.scala</exclude>
                    </excludes>
                    <argLine>-Xms512m</argLine>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.scalatest</groupId>
                <artifactId>scalatest-maven-plugin</artifactId>
                <version>${scalatest.maven.version}</version>
                <configuration>
                    <reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
                    <junitxml>.</junitxml>
                    <filereports>TestSuiteReport.txt</filereports>
                    <tagsToExclude>KustoE2E</tagsToExclude>
                    <argLine>-Xms512m</argLine>
                    <!-- Comma separated list of JUnit test class names to execute -->
                    <!--jUnitClasses>samples.AppTest</jUnitClasses-->
                </configuration>
                <executions>
                    <execution>
                        <id>test</id>
                        <goals>
                            <goal>test</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.scalastyle</groupId>
                <artifactId>scalastyle-maven-plugin</artifactId>
                <version>${scalastyle.maven.plugin.version}</version>
                <configuration>
                    <verbose>false</verbose>
                    <failOnViolation>false</failOnViolation>
                    <includeTestSourceDirectory>true</includeTestSourceDirectory>
                    <failOnWarning>false</failOnWarning>
                    <sourceDirectory>${project.basedir}/src/main/scala</sourceDirectory>
                    <testSourceDirectory>${project.basedir}/src/test/scala</testSourceDirectory>
                    <configLocation>${project.basedir}/scalastyle_config.xml</configLocation>
                    <outputFile>${project.basedir}/scalastyle-output.xml</outputFile>
                    <outputEncoding>UTF-8</outputEncoding>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>${maven.source.plugin.version}</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>jar-no-fork</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>${maven.jar.plugin.version}</version>
                <executions>
                    <execution>
                        <id>empty-javadoc-jar</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                        <configuration>
                            <classifier>javadoc</classifier>
                            <classesDirectory>${basedir}/javadoc</classesDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>3.2.0</version>
                <executions>
                    <execution>
                        <id>make-assembly</id> <!-- this is used for inheritance merges -->
                        <phase>package</phase> <!-- bind to the packaging phase -->
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <archive>
                        <manifest>
                            <mainClass>fully.qualified.MainClass</mainClass>
                        </manifest>
                    </archive>
                    <descriptorRefs>
                        <descriptorRef>jar-with-dependencies</descriptorRef>
                    </descriptorRefs>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven.compile.plugin.version}</version>
                <configuration>
                    <source>${java.source.version}</source>
                    <target>${java.target.version}</target>
                </configuration>
            </plugin>
            <!--
            Perform the maven shade to have all the specific dependencies used in the connector
            Use the most used libraries in the shade. This will ensure that the connector will not have any conflicts
            with the libraries used in the spark cluster (or bundled libraries in ADB)
            The spark connector uses the JavaSDK, which takes in dependencies kusto-data and kusto-ingest. These use
            the azure-storage-blob/queue and azure-storage libraries & azure-sdk dependencies. These have transient dependencies
            on netty, jackson which are the popular libraries that cause conflicts.
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>${maven.shade.plugin.version}</version> <!-- {x-version-update;org.apache.maven.plugins:maven-shade-plugin;external_dependency} -->
                <executions>
                    <execution>
                        <id>shade</id>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <!--
                            Shade the core dependencies internal dependencies of com.azure
                            This will include the packages com.azure.core, com.azure.configuration etc. which are the
                            dependencies used.
                            -->
                            <relocations>
                                <relocation>
                                    <pattern>com.azure</pattern>
                                    <shadedPattern>${shadingPrefix}.com.azure</shadedPattern>
                                </relocation>
                                <relocation>
                                    <pattern>scala.compat.java8</pattern>
                                    <shadedPattern>${shadingPrefix}.scala.compat.java8</shadedPattern>
                                </relocation>
                                <relocation>
                                    <pattern>scala.concurrent.java8</pattern>
                                    <shadedPattern>${shadingPrefix}.scala.concurrent.java8</shadedPattern>
                                </relocation>
                                <!--
                                com.azure.netty uses a lot of dependencies from netty which is a transitive dependency
                                used for the ASYNC HTTP clients used in the frameworks
                                -->
                                <relocation>
                                    <pattern>io.netty</pattern>
                                    <shadedPattern>${shadingPrefix}.io.netty</shadedPattern>
                                </relocation>
                                <relocation>
                                    <pattern>org.codehaus</pattern>
                                    <shadedPattern>${shadingPrefix}.org.codehaus</shadedPattern>
                                </relocation>
                                <!--
                                Jackson versions used in the connector may be different from the ones used in the ADB and
                                any external loaded libraries. This relocation will ensure that the connector will use the
                                versions used in teh connector
                                -->
                                <relocation>
                                    <pattern>com.fasterxml</pattern>
                                    <shadedPattern>${shadingPrefix}.com.fasterxml</shadedPattern>
                                </relocation>
                                <!-- Used in Jackson -->
                                <relocation>
                                    <pattern>com.thoughtworks.paranamer</pattern>
                                    <shadedPattern>${shadingPrefix}.com.thoughtworks.paranamer</shadedPattern>
                                </relocation>
                                <relocation>
                                    <pattern>org.reactivestreams</pattern>
                                    <shadedPattern>${shadingPrefix}.org.reactivestreams</shadedPattern>
                                </relocation>
                                <relocation>
                                    <pattern>reactor</pattern>
                                    <shadedPattern>${shadingPrefix}.reactor</shadedPattern>
                                </relocation>
                                <!-- Used in hadoop jars -->
                                <relocation>
                                    <pattern>javax.activation</pattern>
                                    <shadedPattern>${shadingPrefix}.javax.activation</shadedPattern>
                                </relocation>
                                <!--
                                Relocate com.microsoft.azure.* libraries such as storage, queue and identity.
                                However exclude the kusto libraries as they are referenced directly and are in this
                                code base and hence will not have any conflicts of packages/versions
                                -->
                                <relocation>
                                    <pattern>com.microsoft.azure</pattern>
                                    <shadedPattern>${shadingPrefix}.com.microsoft.azure</shadedPattern>
                                    <excludes>
                                        <exclude>com.microsoft.kusto.spark.*</exclude>
                                        <exclude>com.microsoft.kusto.spark.authentication</exclude>
                                        <exclude>com.microsoft.kusto.spark.common</exclude>
                                        <exclude>com.microsoft.kusto.spark.datasink</exclude>
                                        <exclude>com.microsoft.kusto.spark.datasource</exclude>
                                        <exclude>com.microsoft.kusto.spark.exceptions</exclude>
                                        <exclude>com.microsoft.kusto.spark.utils</exclude>
                                        <exclude>com.microsoft.kusto.spark.sql.extension</exclude>
                                    </excludes>
                                </relocation>
                                <relocation>
                                    <pattern>com.microsoft.applicationinsights</pattern>
                                    <shadedPattern>${shadingPrefix}.com.microsoft.applicationinsights</shadedPattern>
                                </relocation>
                                <!-- Guava has transient dependencies -->
                                <relocation>
                                    <pattern>com.google</pattern>
                                    <shadedPattern>${shadingPrefix}.com.google</shadedPattern>
                                </relocation>
                                <!-- ADAL/MSAL & Other transient dependency -->
                                <relocation>
                                    <pattern>com.microsoft.aad</pattern>
                                    <shadedPattern>${shadingPrefix}.com.microsoft.aad</shadedPattern>
                                </relocation>
                                <!-- Used in MSAL -->
                                <relocation>
                                    <pattern>com.nimbusds</pattern>
                                    <shadedPattern>${shadingPrefix}.com.nimbusds</shadedPattern>
                                </relocation>
                                <!-- Used in KV -->
                                <relocation>
                                    <pattern>net.minidev</pattern>
                                    <shadedPattern>${shadingPrefix}.net.minidev</shadedPattern>
                                </relocation>
                                <!-- Used in MSAL -->
                                <relocation>
                                    <pattern>net.jcip</pattern>
                                    <shadedPattern>${shadingPrefix}.net.jcip</shadedPattern>
                                </relocation>
                            </relocations>
                            <filters>
                                <filter>
                                    <artifact>com.microsoft.azure:applicationinsights-core</artifact>
                                    <includes>
                                        <include>**</include>
                                    </includes>
                                </filter>
                                <filter>
                                    <artifact>*:*</artifact>
                                    <excludes>
                                        <!-- suppress warning: Discovered module-info.class. Shading will break its strong encapsulation. -->
                                        <!-- https://stackoverflow.com/questions/56063566/maven-how-to-remove-module-info-class-warning-for-shaded-jar -->
                                        <exclude>module-info.class</exclude>
                                        <!-- remove the dependencies signature as not relevant-->
                                        <exclude>META-INF/*.MF</exclude>
                                        <exclude>META-INF/*.SF</exclude>
                                        <exclude>META-INF/*.DSA</exclude>
                                        <exclude>META-INF/*.RSA</exclude>
                                    </excludes>
                                </filter>
                            </filters>
                            <artifactSet>
                                <excludes>
                                    <exclude>org.slf4j</exclude>
                                    <exclude>org.apache.hadoop:*</exclude>
                                    <exclude>org.apache.spark:*</exclude>
                                    <exclude>org.scala-lang:*</exclude>
                                </excludes>
                            </artifactSet>
                            <minimizeJar>true</minimizeJar>
                            <transformers>
                                <!-- prevents apache license duplication -->
                                <transformer implementation="org.apache.maven.plugins.shade.resource.ApacheLicenseResourceTransformer">
                                </transformer>

                                <!-- Some licenses (including the Apache License, Version 2)
                                 require that notices are preserved by downstream distributors.
                                  ApacheNoticeResourceTransformer automates the assembly of an appropriate NOTICE. -->
                                <transformer implementation="org.apache.maven.plugins.shade.resource.ApacheNoticeResourceTransformer">
                                    <addHeader>false</addHeader>
                                </transformer>

                                <!-- The PropertiesTransformer allows a set of properties files to be merged
                                 and to resolve conflicts based on an ordinal giving the priority of each file.
                                 An optional alreadyMergedKey enables to have a boolean flag in the file which,
                                 if set to true, request to use the file as it as the result of the merge.
                                 If two files are considered complete in the merge process then the shade will fail.-->
                                <transformer implementation="org.apache.maven.plugins.shade.resource.properties.PropertiesTransformer">
                                    <!-- required configuration -->
                                    <!-- merges all netty lib version files into one file -->
                                    <resource>META-INF/io.netty.versions.properties</resource>
                                    <ordinalKey>ordinal</ordinalKey>
                                    <!-- optional configuration -->
                                    <alreadyMergedKey>already_merged</alreadyMergedKey>
                                    <defaultOrdinal>0</defaultOrdinal>
                                    <reverseOrder>false</reverseOrder>
                                </transformer>
                                <!-- this handles and properly merges the content of META-INF/services in the dependencies -->
                                <transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer"/>
                                <transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                                    <!-- once 3.3.0 shade plugin is release upgrade the maven plugin and remove AppendingTransformer
                                      https://issues.apache.org/jira/browse/MSHADE-371 -->
                                    <resource>META-INF/NOTICE.md</resource>
                                </transformer>
                                <transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                                    <!-- once 3.3.0 shade plugin is release upgrade the maven plugin and remove AppendingTransformer
                                      https://issues.apache.org/jira/browse/MSHADE-371 -->
                                    <resource>META-INF/LICENSE.md</resource>
                                </transformer>
                            </transformers>
                            <!-- When true, it will attempt to shade the contents of the java source files when creating the sources jar. -->
                            <shadeSourcesContent>true</shadeSourcesContent>
                            <createDependencyReducedPom>true</createDependencyReducedPom>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
