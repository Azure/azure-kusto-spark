name: AzureKustoSpark
on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ "**" ]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    environment: build
    permissions:
      checks: write
      pull-requests: write
      id-token: write
      contents: read
    steps:
      - name: Check out code into the Spark module directory
        uses: actions/checkout@v4
      - name: Setup java
        uses: actions/setup-java@v4
        with:
          distribution: 'adopt'
          java-version: 8
          cache: 'maven'
          cache-dependency-path: |
            pom.xml
            connector/pom.xml
            samples/pom.xml
      - name: Azure login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.APP_ID }}
          tenant-id: ${{ secrets.TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - name: "Run az commands"
        run: |
              access_token=$(az account get-access-token --resource=${{ secrets.APP_ID }} --scope=${{ secrets.CLUSTER }}/.default --query accessToken -o tsv)
              echo "ACCESS_TOKEN=$access_token" >> $GITHUB_ENV
      - name: Run the Maven verify phase
        env:
          kustoAadAuthorityID: ${{ secrets.TENANT_ID }}
          kustoDatabase: ${{ secrets.DATABASE }}
          kustoCluster: ${{ secrets.CLUSTER }}
          kustoAadAppId: ${{secrets.APP_ID}}
          accessToken: ${{env.ACCESS_TOKEN}}
          storageAccountUrl: ${{ secrets.STORAGE_CONTAINER_URL }}
          ingestStorageUrl: ${{ secrets.INGEST_STORAGE_URL }}
          ingestStorageContainer: ${{ secrets.INGEST_STORAGE_CONTAINER }}
        run: |
          mvn clean verify -DkustoAadAppId=${{ secrets.APP_ID }} -DkustoAadAuthorityID=${{ secrets.TENANT_ID }} -DkustoDatabase=${{ secrets.DATABASE }} -DkustoCluster=${{ secrets.CLUSTER }} -DaccessToken=${{env.ACCESS_TOKEN}} -DingestStorageUrl=${{secrets.INGEST_STORAGE_URL}} -DingestStorageContainer=${{secrets.INGEST_STORAGE_CONTAINER}}
          
      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: |
            connector/target/surefire-reports/*.xml
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
